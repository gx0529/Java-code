

栈的压入，弹出序列

输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。
假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，
序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。
（注意：这两个序列的长度是相等的）

import java.util.ArrayList;
import java.util.Stack;

public class Solution {
    public boolean IsPopOrder(int [] pushA,int [] popA) {
        int ii = 0;
        int io = 0;
        int len = pushA.length;
        Stack<Integer> stack = new Stack<>();
        while(ii < len){
            if(pushA[ii] == popA[io]){
                ii++;
                io++;
            }else{
                if(!stack.isEmpty() && popA[io]==stack.peek()){
                    stack.pop();
                    io++;
                }else{
                    stack.push(pushA[ii]);
                    ii++;
                }
            }
        }
        while(!stack.isEmpty()){
            if(popA[io] != stack.peek()){
                return false;
            }else{
                stack.pop();
                io++;
            }
        }
        return true;
    }
}